/*
 * PagarmeCoreApiLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package me.pagar.api.models;

import java.util.*;

public class CreateOrderRequestBuilder {
    //the instance to build
    private CreateOrderRequest createOrderRequest;

    /**
     * Default constructor to initialize the instance
     */
    public CreateOrderRequestBuilder() {
        createOrderRequest = new CreateOrderRequest();
    }

    /**
     * Items
     */
    public CreateOrderRequestBuilder items(List<CreateOrderItemRequest> items) {
        createOrderRequest.setItems(items);
        return this;
    }

    /**
     * Request for creating a new customer
     */
    public CreateOrderRequestBuilder customer(CreateCustomerRequest customer) {
        createOrderRequest.setCustomer(customer);
        return this;
    }

    /**
     * Payment data
     */
    public CreateOrderRequestBuilder payments(List<CreatePaymentRequest> payments) {
        createOrderRequest.setPayments(payments);
        return this;
    }

    /**
     * The order code
     */
    public CreateOrderRequestBuilder code(String code) {
        createOrderRequest.setCode(code);
        return this;
    }

    /**
     * The customer id
     */
    public CreateOrderRequestBuilder customerId(String customerId) {
        createOrderRequest.setCustomerId(customerId);
        return this;
    }

    /**
     * Shipping data
     */
    public CreateOrderRequestBuilder shipping(CreateShippingRequest shipping) {
        createOrderRequest.setShipping(shipping);
        return this;
    }

    /**
     * Metadata
     */
    public CreateOrderRequestBuilder metadata(LinkedHashMap<String, String> metadata) {
        createOrderRequest.setMetadata(metadata);
        return this;
    }

    /**
     * Defines whether the order will go through anti-fraud
     */
    public CreateOrderRequestBuilder antifraudEnabled(Boolean antifraudEnabled) {
        createOrderRequest.setAntifraudEnabled(antifraudEnabled);
        return this;
    }

    /**
     * Ip address
     */
    public CreateOrderRequestBuilder ip(String ip) {
        createOrderRequest.setIp(ip);
        return this;
    }

    /**
     * Session id
     */
    public CreateOrderRequestBuilder sessionId(String sessionId) {
        createOrderRequest.setSessionId(sessionId);
        return this;
    }

    /**
     * Request for creating a location
     */
    public CreateOrderRequestBuilder location(CreateLocationRequest location) {
        createOrderRequest.setLocation(location);
        return this;
    }

    /**
     * Request for creating a device
     */
    public CreateOrderRequestBuilder device(CreateDeviceRequest device) {
        createOrderRequest.setDevice(device);
        return this;
    }

    public CreateOrderRequestBuilder closed(boolean closed) {
        createOrderRequest.setClosed(closed);
        return this;
    }

    /**
     * Currency
     */
    public CreateOrderRequestBuilder currency(String currency) {
        createOrderRequest.setCurrency(currency);
        return this;
    }

    public CreateOrderRequestBuilder antifraud(CreateAntifraudRequest antifraud) {
        createOrderRequest.setAntifraud(antifraud);
        return this;
    }

    /**
     * SubMerchant
     */
    public CreateOrderRequestBuilder submerchant(CreateSubMerchantRequest submerchant) {
        createOrderRequest.setSubmerchant(submerchant);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public CreateOrderRequest build() {
        return createOrderRequest;
    }
}