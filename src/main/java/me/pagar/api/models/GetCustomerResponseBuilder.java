/*
 * PagarmeCoreApiLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package me.pagar.api.models;

import java.util.*;
import org.joda.time.DateTime;

public class GetCustomerResponseBuilder {
    //the instance to build
    private GetCustomerResponse getCustomerResponse;

    /**
     * Default constructor to initialize the instance
     */
    public GetCustomerResponseBuilder() {
        getCustomerResponse = new GetCustomerResponse();
    }

    public GetCustomerResponseBuilder id(String id) {
        getCustomerResponse.setId(id);
        return this;
    }

    public GetCustomerResponseBuilder name(String name) {
        getCustomerResponse.setName(name);
        return this;
    }

    public GetCustomerResponseBuilder email(String email) {
        getCustomerResponse.setEmail(email);
        return this;
    }

    public GetCustomerResponseBuilder delinquent(boolean delinquent) {
        getCustomerResponse.setDelinquent(delinquent);
        return this;
    }

    public GetCustomerResponseBuilder createdAt(DateTime createdAt) {
        getCustomerResponse.setCreatedAt(createdAt);
        return this;
    }

    public GetCustomerResponseBuilder updatedAt(DateTime updatedAt) {
        getCustomerResponse.setUpdatedAt(updatedAt);
        return this;
    }

    public GetCustomerResponseBuilder document(String document) {
        getCustomerResponse.setDocument(document);
        return this;
    }

    public GetCustomerResponseBuilder type(String type) {
        getCustomerResponse.setType(type);
        return this;
    }

    public GetCustomerResponseBuilder fbAccessToken(String fbAccessToken) {
        getCustomerResponse.setFbAccessToken(fbAccessToken);
        return this;
    }

    /**
     * Response object for getting an Address
     */
    public GetCustomerResponseBuilder address(GetAddressResponse address) {
        getCustomerResponse.setAddress(address);
        return this;
    }

    public GetCustomerResponseBuilder metadata(LinkedHashMap<String, String> metadata) {
        getCustomerResponse.setMetadata(metadata);
        return this;
    }

    public GetCustomerResponseBuilder phones(GetPhonesResponse phones) {
        getCustomerResponse.setPhones(phones);
        return this;
    }

    public GetCustomerResponseBuilder fbId(Long fbId) {
        getCustomerResponse.setFbId(fbId);
        return this;
    }

    /**
     * Código de referência do cliente no sistema da loja. Max: 52 caracteres
     */
    public GetCustomerResponseBuilder code(String code) {
        getCustomerResponse.setCode(code);
        return this;
    }

    public GetCustomerResponseBuilder documentType(String documentType) {
        getCustomerResponse.setDocumentType(documentType);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public GetCustomerResponse build() {
        return getCustomerResponse;
    }
}