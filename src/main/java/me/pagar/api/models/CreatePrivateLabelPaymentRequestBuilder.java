/*
 * PagarmeCoreApiLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package me.pagar.api.models;

import java.util.*;

public class CreatePrivateLabelPaymentRequestBuilder {
    //the instance to build
    private CreatePrivateLabelPaymentRequest createPrivateLabelPaymentRequest;

    /**
     * Default constructor to initialize the instance
     */
    public CreatePrivateLabelPaymentRequestBuilder() {
        createPrivateLabelPaymentRequest = new CreatePrivateLabelPaymentRequest();
    }

    /**
     * Number of installments
     */
    public CreatePrivateLabelPaymentRequestBuilder installments(Integer installments) {
        createPrivateLabelPaymentRequest.setInstallments(installments);
        return this;
    }

    /**
     * The text that will be shown on the private label's statement
     */
    public CreatePrivateLabelPaymentRequestBuilder statementDescriptor(String statementDescriptor) {
        createPrivateLabelPaymentRequest.setStatementDescriptor(statementDescriptor);
        return this;
    }

    /**
     * Card data
     */
    public CreatePrivateLabelPaymentRequestBuilder card(CreateCardRequest card) {
        createPrivateLabelPaymentRequest.setCard(card);
        return this;
    }

    /**
     * The Card id
     */
    public CreatePrivateLabelPaymentRequestBuilder cardId(String cardId) {
        createPrivateLabelPaymentRequest.setCardId(cardId);
        return this;
    }

    public CreatePrivateLabelPaymentRequestBuilder cardToken(String cardToken) {
        createPrivateLabelPaymentRequest.setCardToken(cardToken);
        return this;
    }

    /**
     * Indicates a recurrence
     */
    public CreatePrivateLabelPaymentRequestBuilder recurrence(Boolean recurrence) {
        createPrivateLabelPaymentRequest.setRecurrence(recurrence);
        return this;
    }

    /**
     * Indicates if the operation should be only authorization or auth and capture.
     */
    public CreatePrivateLabelPaymentRequestBuilder capture(Boolean capture) {
        createPrivateLabelPaymentRequest.setCapture(capture);
        return this;
    }

    /**
     * Indicates whether the extended label (private label) is enabled
     */
    public CreatePrivateLabelPaymentRequestBuilder extendedLimitEnabled(Boolean extendedLimitEnabled) {
        createPrivateLabelPaymentRequest.setExtendedLimitEnabled(extendedLimitEnabled);
        return this;
    }

    /**
     * Extended Limit Code
     */
    public CreatePrivateLabelPaymentRequestBuilder extendedLimitCode(String extendedLimitCode) {
        createPrivateLabelPaymentRequest.setExtendedLimitCode(extendedLimitCode);
        return this;
    }

    /**
     * Defines whether the card has been used one or more times.
     */
    public CreatePrivateLabelPaymentRequestBuilder recurrencyCycle(String recurrencyCycle) {
        createPrivateLabelPaymentRequest.setRecurrencyCycle(recurrencyCycle);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public CreatePrivateLabelPaymentRequest build() {
        return createPrivateLabelPaymentRequest;
    }
}