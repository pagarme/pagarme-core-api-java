/*
 * PagarmeCoreApiLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package me.pagar.api.models;

import java.util.*;

public class CreatePaymentRequestBuilder {
    //the instance to build
    private CreatePaymentRequest createPaymentRequest;

    /**
     * Default constructor to initialize the instance
     */
    public CreatePaymentRequestBuilder() {
        createPaymentRequest = new CreatePaymentRequest();
    }

    /**
     * Payment method
     */
    public CreatePaymentRequestBuilder paymentMethod(String paymentMethod) {
        createPaymentRequest.setPaymentMethod(paymentMethod);
        return this;
    }

    /**
     * The settings for creating a credit card payment
     */
    public CreatePaymentRequestBuilder creditCard(CreateCreditCardPaymentRequest creditCard) {
        createPaymentRequest.setCreditCard(creditCard);
        return this;
    }

    /**
     * The settings for creating a debit card payment
     */
    public CreatePaymentRequestBuilder debitCard(CreateDebitCardPaymentRequest debitCard) {
        createPaymentRequest.setDebitCard(debitCard);
        return this;
    }

    /**
     * Contains the settings for creating a boleto payment
     */
    public CreatePaymentRequestBuilder boleto(CreateBoletoPaymentRequest boleto) {
        createPaymentRequest.setBoleto(boleto);
        return this;
    }

    /**
     * Currency. Must be informed using 3 characters
     */
    public CreatePaymentRequestBuilder currency(String currency) {
        createPaymentRequest.setCurrency(currency);
        return this;
    }

    /**
     * The settings for creating a voucher payment
     */
    public CreatePaymentRequestBuilder voucher(CreateVoucherPaymentRequest voucher) {
        createPaymentRequest.setVoucher(voucher);
        return this;
    }

    /**
     * Splits
     */
    public CreatePaymentRequestBuilder split(List<CreateSplitRequest> split) {
        createPaymentRequest.setSplit(split);
        return this;
    }

    /**
     * Request for creating a bank transfer payment
     */
    public CreatePaymentRequestBuilder bankTransfer(CreateBankTransferPaymentRequest bankTransfer) {
        createPaymentRequest.setBankTransfer(bankTransfer);
        return this;
    }

    /**
     * Gateway affiliation code
     */
    public CreatePaymentRequestBuilder gatewayAffiliationId(String gatewayAffiliationId) {
        createPaymentRequest.setGatewayAffiliationId(gatewayAffiliationId);
        return this;
    }

    /**
     * The amount of the payment, in cents
     */
    public CreatePaymentRequestBuilder amount(Integer amount) {
        createPaymentRequest.setAmount(amount);
        return this;
    }

    /**
     * Checkout payment request
     */
    public CreatePaymentRequestBuilder checkout(CreateCheckoutPaymentRequest checkout) {
        createPaymentRequest.setCheckout(checkout);
        return this;
    }

    /**
     * Customer Id
     */
    public CreatePaymentRequestBuilder customerId(String customerId) {
        createPaymentRequest.setCustomerId(customerId);
        return this;
    }

    /**
     * Request for creating a new customer
     */
    public CreatePaymentRequestBuilder customer(CreateCustomerRequest customer) {
        createPaymentRequest.setCustomer(customer);
        return this;
    }

    /**
     * Metadata
     */
    public CreatePaymentRequestBuilder metadata(LinkedHashMap<String, String> metadata) {
        createPaymentRequest.setMetadata(metadata);
        return this;
    }

    public CreatePaymentRequestBuilder cash(CreateCashPaymentRequest cash) {
        createPaymentRequest.setCash(cash);
        return this;
    }

    /**
     * The settings for creating a private label payment
     */
    public CreatePaymentRequestBuilder privateLabel(CreatePrivateLabelPaymentRequest privateLabel) {
        createPaymentRequest.setPrivateLabel(privateLabel);
        return this;
    }

    /**
     * Contains information to create a pix payment
     */
    public CreatePaymentRequestBuilder pix(CreatePixPaymentRequest pix) {
        createPaymentRequest.setPix(pix);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public CreatePaymentRequest build() {
        return createPaymentRequest;
    }
}