/*
 * PagarmeCoreApiLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package me.pagar.api.models;

import java.util.*;

public class CreatePlanRequestBuilder {
    //the instance to build
    private CreatePlanRequest createPlanRequest;

    /**
     * Default constructor to initialize the instance
     */
    public CreatePlanRequestBuilder() {
        createPlanRequest = new CreatePlanRequest();
    }

    /**
     * Plan's name
     */
    public CreatePlanRequestBuilder name(String name) {
        createPlanRequest.setName(name);
        return this;
    }

    /**
     * Description
     */
    public CreatePlanRequestBuilder description(String description) {
        createPlanRequest.setDescription(description);
        return this;
    }

    /**
     * Text that will be printed on the credit card's statement
     */
    public CreatePlanRequestBuilder statementDescriptor(String statementDescriptor) {
        createPlanRequest.setStatementDescriptor(statementDescriptor);
        return this;
    }

    /**
     * Plan items
     */
    public CreatePlanRequestBuilder items(List<CreatePlanItemRequest> items) {
        createPlanRequest.setItems(items);
        return this;
    }

    /**
     * Indicates if the plan is shippable
     */
    public CreatePlanRequestBuilder shippable(boolean shippable) {
        createPlanRequest.setShippable(shippable);
        return this;
    }

    /**
     * Allowed payment methods for the plan
     */
    public CreatePlanRequestBuilder paymentMethods(List<String> paymentMethods) {
        createPlanRequest.setPaymentMethods(paymentMethods);
        return this;
    }

    /**
     * Number of installments
     */
    public CreatePlanRequestBuilder installments(List<Integer> installments) {
        createPlanRequest.setInstallments(installments);
        return this;
    }

    /**
     * Currency
     */
    public CreatePlanRequestBuilder currency(String currency) {
        createPlanRequest.setCurrency(currency);
        return this;
    }

    /**
     * Interval
     */
    public CreatePlanRequestBuilder interval(String interval) {
        createPlanRequest.setInterval(interval);
        return this;
    }

    /**
     * Interval counts between two charges. For instance, if the interval is 'month' and count is 2, the customer will be charged once every two months.
     */
    public CreatePlanRequestBuilder intervalCount(int intervalCount) {
        createPlanRequest.setIntervalCount(intervalCount);
        return this;
    }

    /**
     * Allowed billings days for the subscription, in case the plan type is 'exact_day'
     */
    public CreatePlanRequestBuilder billingDays(List<Integer> billingDays) {
        createPlanRequest.setBillingDays(billingDays);
        return this;
    }

    /**
     * Billing type
     */
    public CreatePlanRequestBuilder billingType(String billingType) {
        createPlanRequest.setBillingType(billingType);
        return this;
    }

    /**
     * Request for creating a pricing scheme
     */
    public CreatePlanRequestBuilder pricingScheme(CreatePricingSchemeRequest pricingScheme) {
        createPlanRequest.setPricingScheme(pricingScheme);
        return this;
    }

    /**
     * Metadata
     */
    public CreatePlanRequestBuilder metadata(LinkedHashMap<String, String> metadata) {
        createPlanRequest.setMetadata(metadata);
        return this;
    }

    /**
     * Minimum price that will be charged
     */
    public CreatePlanRequestBuilder minimumPrice(Integer minimumPrice) {
        createPlanRequest.setMinimumPrice(minimumPrice);
        return this;
    }

    /**
     * Number of cycles
     */
    public CreatePlanRequestBuilder cycles(Integer cycles) {
        createPlanRequest.setCycles(cycles);
        return this;
    }

    /**
     * Quantity
     */
    public CreatePlanRequestBuilder quantity(Integer quantity) {
        createPlanRequest.setQuantity(quantity);
        return this;
    }

    /**
     * Trial period, where the customer will not be charged.
     */
    public CreatePlanRequestBuilder trialPeriodDays(Integer trialPeriodDays) {
        createPlanRequest.setTrialPeriodDays(trialPeriodDays);
        return this;
    }
    /**
     * Build the instance with the given values
     */
    public CreatePlanRequest build() {
        return createPlanRequest;
    }
}